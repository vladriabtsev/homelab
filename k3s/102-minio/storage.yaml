# https://kubernetes.io/docs/concepts/storage/volumes/
# NFS
# https://github.com/kubernetes/examples/tree/master/staging/volumes/nfs
# https://man7.org/linux/man-pages/man5/nfsmount.conf.5.html
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: minio
  name: minio-nfs-volume
spec:
  capacity:
    storage: 100Gi # Ei, Pi, Ti, Gi, Mi, Ki, E, P, T, G, M, K
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.100.221
    path: /volume1/minio-volume
  mountOptions:
    - nfsvers=4.0
    # - rsize=32k
    # - wsize=32k
    # - Proto=Tcp
    # - Background=True
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: minio
  name: minio-nfs-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Gi
  volumeName: minio-nfs-volume
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: test-pd
# spec:
#   containers:
#   - image: registry.k8s.io/test-webserver
#     name: test-container
#     volumeMounts:
#     - mountPath: /my-nfs-data
#       name: test-volume
#   volumes:
#   - name: minio-nfs-volume
#     nfs:
#       server: 192.168.100.221
#       path: /volume1/minio-volume
#       readOnly: false

# ISCSI
# https://github.com/kubernetes/examples/blob/master/volumes/iscsi/README.md
# https://docs.openshift.com/container-platform/4.9/storage/persistent_storage/persistent-storage-iscsi.html
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: chap-secret
# type: "kubernetes.io/iscsi-chap"
# data:
#   discovery.sendtargets.auth.username:
#   discovery.sendtargets.auth.password:
#   discovery.sendtargets.auth.username_in:
#   discovery.sendtargets.auth.password_in:
#   node.session.auth.username:
#   node.session.auth.password:
#   node.session.auth.username_in:
#   node.session.auth.password_in:

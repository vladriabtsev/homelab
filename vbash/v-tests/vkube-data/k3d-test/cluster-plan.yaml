cluster_name: test
amount_nodes: 1
kubernetes_type: k3d # k3s, k3d, k8s
k3d_ver: v5.8.2 # https://github.com/k3d-io/k3d/releases
k3s_ver: v1.33.0+k3s1 # https://github.com/k3s-io/k3s/releases
#cluster_token: kuku
#cluster_token_file: ~/cluster_token_file
# can be overridden by node settings

node_user: vlad
cert_name: id_rsa

# https://github.com/kube-vip/kube-vip/releases
kube_vip_use: 1
kube_vip_ver: v0.9.1  # auto upgrade to latest if empty
#kube_vip_cloud_provider_ver: v0.0.10
kube_vip_address: 192.168.100.201
kube_vip_mode: ARP # ARP or BGP
kube_vip_as_ha: 1
kube_vip_as_lb: 1
kube_vip_lb_range: 192.168.100.202-192.168.100.210

# Custom Kubernetes controller that can be used to replicate secrets, configmaps and certificates.
# https://github.com/emberstack/kubernetes-reflector
# https://www.baeldung.com/ops/kubernetes-namespaces-common-secrets
kubernetes_reflector_use: 0
kubernetes_reflector_ver: # auto upgrade to latest if empty

# all nodes settings
nodes_admin_password_secret_file_path: # text file path
nodes_admin_password_secret_pass_path: test-nodes-admin/password.txt # text from 'pass' password manager store (<password manager folder>/<secret name>)
# node settings
node:
- node_id: 1
#   node_name: k3s1
#   node_ip4: 192.168.100.51
#   kube_vip_interface: eth1
#   # node admin user name and password from secret folder if need different account for node
#   node_admin_password_secret_file_path: # text file path
#   node_admin_password_secret_pass_path: # text from 'pass' password manager store (<password manager folder>/<secret name>)
#   node_user: vlad
#   node_is_control_plane: 1
#   node_is_worker: 1
#   node_storage:
#   - storage_class: nvme
#     disk_uuid: a852f0c8-bc0a-49d5-b2cc-33f1a2cccb99
#     mnt_path: /mnt/nvme0 # 465.8G
#   - storage_class: nvme
#     disk_uuid: 392ecee2-89cd-4866-b78f-d73e64305de3
#     mnt_path: /mnt/nvme1 # 465.8G
#   - storage_class: ssd
#     disk_uuid: 5387f615-80ab-4565-b6f4-152a099517b2
#     mnt_path: /mnt/ssd0 # 476.94G

#################
# S T O R A G E
#################

# https://overcast.blog/provisioning-kubernetes-local-persistent-volumes-full-tutorial-147cfb20ec27
local_storage_use: 1

# https://github.com/kubernetes-csi/csi-driver-nfs
csi_driver_nfs_use: 1
csi_driver_nfs_ver:  # auto upgrade to latest if empty
csi_driver_nfs_namespace: csi-nfs

# https://github.com/kubernetes-csi/csi-driver-smb
csi_driver_smb_use: 1
csi_driver_smb_ver:   # auto upgrade to latest if empty
# csi_driver_smb_secret_folder: ${HOME}/.ssh/office-smb-secrets # folder with username.txt and password.txt files
# csi_driver_smb_secret_pass_folder: # 'pass' password manager folder with username.txt and password.txt
csi_driver_smb_namespace: csi-smb

# https://github.com/SynologyOpenSource/synology-csi
csi_synology_use: 1 # csi-synology/csi-synology-plan.yaml is expected in same folder as this file
csi_synology_namespace: csi-synology

# https://github.com/longhorn/longhorn
longhorn_ver: v1.8.1 # auto upgrade to latest if empty
longhorn_use: 0
longhorn_ui_admin_name_secret_file_path: ${HOME}/.ssh/test-longhorn/username.txt # text file path
longhorn_ui_admin_name_secret_pass_path: # text from 'pass' password manager store (<password manager folder>/<secret name>)
longhorn_ui_admin_password_secret_file_path: ${HOME}/.ssh/test-longhorn/password.txt # text file path
longhorn_ui_admin_password_secret_pass_path: # text from 'pass' password manager store (<password manager folder>/<secret name>)

# https://github.com/kubernetes/examples/blob/master/volumes/iscsi/iscsi.yaml

# # https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner
# # https://hbayraktar.medium.com/how-to-setup-dynamic-nfs-provisioning-in-a-kubernetes-cluster-cbf433b7de29
# # synology https://forum.huawei.com/enterprise/intl/en/thread/blog/729566720127025152?blogId=729566720127025152
# nfs_subdir_external_provisioner_use: 0
# nfs_subdir_external_provisioner_ver:  # auto upgrade to latest if empty
# nfs_subdir_external_provisioner_server: 192.168.100.227
# nfs_subdir_external_provisioner_server_path: /volume1/k8s-nfs-ext

storage_servers:
- name: office
  ip4: 192.168.100.227
  protocols:
  # - name: csi-synology
  #   classes:
  #   - name: tmp
  #     reclaimPolicy: Delete
  #     allowVolumeExpansion: true
  - name: csi-driver-smb
    # https://github.com/kubernetes-csi/csi-driver-smb
    secret_folder: ${HOME}/.ssh/office-smb-secrets # folder with username.txt and password.txt files
    secret_pass_folder: # secret from 'pass' password manager folder with username.txt and password.txt secrets
    classes:
    - name: tmp
      smb_vers: "3.0"
      location: /csi-driver-smb
      reclaimPolicy: Delete
      allowVolumeExpansion: true
  - name: csi-driver-nfs
    # https://github.com/kubernetes-csi/csi-driver-nfs
    # https://microk8s.io/docs/how-to-nfs
    # https://medium.com/@bastian.ohm/configuring-your-synology-nas-as-nfs-storage-for-kubernetes-cluster-5e668169e5a2
    secret_folder: ${HOME}/.ssh/office-nfs-secrets # folder with username.txt and password.txt files
    secret_pass_folder: # secret from 'pass' password manager folder with username.txt and password.txt secrets
    classes:
    - name: retain
      location: /volume1/csi-driver-nfs
      mountOptions_nfsvers: "4.0"
      reclaimPolicy: Retain
      allowVolumeExpansion: false
# - name: backup2
#   ip4: 192.168.100.221
#   protocols:
#   - name: csi-driver-nfs
#     secret_folder: ${HOME}/.ssh/backup2-nfs-secrets # folder with username.txt and password.txt files
#     classes:
#     - name: retain
#       location: '/Volume1/csi-nfs' # 'Volume1' without spaces !!!
#       mountOptions_nfsvers: 4.1
#       reclaimPolicy: Retain
#   - name: csi-driver-smb
#     secret_folder: ${HOME}/.ssh/backup2-smb-secrets # folder with username.txt and password.txt files
#     classes:
#     - name: tmp
#       location: /volume1

##########################
# B A C K U P, expecting local minio server exists
##########################
velero_use: 1 # https://velero.io/
velero_ver: v1.16.1 # v1.15.2 # latest if empty
velero_aws_plugin_ver: v1.12.1 # latest if empty (https://github.com/vmware-tanzu/velero-plugin-for-aws)
velero_namespace: # 'velero' is default
velero_credentials_file_path: ${HOME}/.ssh/velero/credentials-velero # minio server credentials
# https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart
velero_minio_url: http://192.168.100.227:9000 # local minio server URL
velero_minio_bucket_name: # bucket name, cluster name if empty

##########################
# A P P L I C A T I O N S
##########################

# Busybox
busybox_use: 1
busybox_ver:  # latest if empty
busybox_external_ip: # auto set if empty

# https://github.com/kubernetes-sigs/external-dns/tree/master
external_dns_ver: v0.15.0 # auto upgrade to latest if empty
# https://github.com/kube-vip/kube-vip/releases
pi_hole_use: 1
pi_hole_ver: v5.18.3  # auto upgrade to latest if empty
# https://github.com/cert-manager/cert-manager
cert_manager_ver: v1.13.2 # auto upgrade to latest if empty
# https://cert-manager.io/docs/configuration/issuers/
cert_manager_issuer: ca # https://cert-manager.io/docs/configuration/ca/
# https://github.com/rancher/rancher
rancher_ver: v2.9.5 # auto upgrade to latest if empty
# https://github.com/metallb/metallb
metal_lb_ver: v0.14.9 # auto upgrade to latest if empty
# https://github.com/argoproj/argo-cd
argo_cd: v2.13.3 # auto upgrade to latest if empty
